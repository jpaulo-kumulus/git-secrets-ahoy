# Stubs for gitdb.stream (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from gitdb.util import LazyMixin
from typing import Any, Optional

class DecompressMemMapReader(LazyMixin):
    max_read_size: Any = ...
    def __init__(self, m, close_on_deletion, size: Optional[Any] = ...) -> None: ...
    def __del__(self) -> None: ...
    @classmethod
    def new(self, m, close_on_deletion: bool = ...): ...
    def data(self): ...
    def close(self) -> None: ...
    def compressed_bytes_read(self): ...
    def seek(self, offset, whence: Any = ...) -> None: ...
    def read(self, size: int = ...): ...

class DeltaApplyReader(LazyMixin):
    k_max_memory_move: Any = ...
    def __init__(self, stream_list) -> None: ...
    def read(self, count: int = ...): ...
    def seek(self, offset, whence: Any = ...) -> None: ...
    @classmethod
    def new(cls, stream_list): ...
    @property
    def type(self): ...
    @property
    def type_id(self): ...
    @property
    def size(self): ...

class Sha1Writer:
    sha1: Any = ...
    def __init__(self) -> None: ...
    def write(self, data): ...
    def sha(self, as_hex: bool = ...): ...

class FlexibleSha1Writer(Sha1Writer):
    writer: Any = ...
    def __init__(self, writer) -> None: ...
    def write(self, data) -> None: ...

class ZippedStoreShaWriter(Sha1Writer):
    buf: Any = ...
    zip: Any = ...
    def __init__(self) -> None: ...
    def __getattr__(self, attr): ...
    def write(self, data): ...
    def close(self) -> None: ...
    def seek(self, offset, whence: Any = ...) -> None: ...
    def getvalue(self): ...

class FDCompressedSha1Writer(Sha1Writer):
    exc: Any = ...
    fd: Any = ...
    zip: Any = ...
    def __init__(self, fd) -> None: ...
    def write(self, data): ...
    def close(self): ...

class FDStream:
    def __init__(self, fd) -> None: ...
    def write(self, data) -> None: ...
    def read(self, count: int = ...): ...
    def fileno(self): ...
    def tell(self): ...
    def close(self) -> None: ...

class NullStream:
    def read(self, size: int = ...): ...
    def close(self) -> None: ...
    def write(self, data): ...
