# Stubs for git.objects.tree (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import git.diff as diff
from . import util
from .base import IndexObject
from typing import Any, Optional

class TreeModifier:
    def __init__(self, cache) -> None: ...
    def set_done(self): ...
    def add(self, sha, mode, name, force: bool = ...): ...
    def add_unchecked(self, binsha, mode, name) -> None: ...
    def __delitem__(self, name) -> None: ...

class Tree(IndexObject, diff.Diffable, util.Traversable, util.Serializable):
    type: str = ...
    commit_id: int = ...
    blob_id: int = ...
    symlink_id: int = ...
    tree_id: int = ...
    def __init__(self, repo, binsha, mode: Any = ..., path: Optional[Any] = ...) -> None: ...
    def join(self, file): ...
    def __div__(self, file): ...
    def __truediv__(self, file): ...
    @property
    def trees(self): ...
    @property
    def blobs(self): ...
    @property
    def cache(self): ...
    def traverse(self, predicate: Any = ..., prune: Any = ..., depth: int = ..., branch_first: bool = ..., visit_once: bool = ..., ignore_self: int = ..., as_edge: bool = ...): ...
    def __getslice__(self, i, j): ...
    def __iter__(self): ...
    def __len__(self): ...
    def __getitem__(self, item): ...
    def __contains__(self, item): ...
    def __reversed__(self): ...
